@page "/reporteRegantePagos"

@inject PagosService PagosService
@inject RegantesService RegantesService
@inject DetallePagosService DetallePagosService
@inject EmpresaService EmpresaService
@inject ParametrosService ParametrosService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime

@inject UsuariosService UsuariosService
@inject AutentificacionService AutentificacionService

<PageTitle>Reporte de Pagos</PageTitle>

@if (acceso == "permitido")
{
	<div class="card" style="border-radius: 20px;">

		<div class="card-header bg-primary" style="border-radius: 20px 20px 0px 0px;">
			<div class="row text-white text-center">
				<h3>Reporte de Pagos</h3>
			</div>
		</div>

		<div class="card-body">
			<div class="row mb-4">
				<div class="text-end">
					<button class="btn btn-success" @onclick="ImprimirReporte"><img style="width: 28px; height: 28px; background: none; border: none;" src="/iconos/ico_impresosra.png" /> Imprimir Reporte</button>
				</div>
			</div>

			<table class="table table-bordered text-center">
				<thead class="bg-primary text-white">
					<tr>
						<th>C&oacutedigo</th>
						<th>Regante</th>
						<th>Fecha</th>
						<th>M&eacutetodo de Pago</th>
						<th>Estado</th>
						<th>SubTotal</th>
						<th>Recargos</th>
						<th>Suplementaria</th>
						<th>Total</th>
					</tr>
				</thead>
				<tbody>
					@if (ListaPagos.Any())
					{
						@foreach (var item in ListaPagos)
						{
							float total = @item.Recargos + @item.SubTotal - item.Suplementaria;
							string restrincion = "";
							if (item.Estado == "Eliminada") { restrincion = "text-danger"; } else { restrincion = "text-success"; }
							<tr>
								<td>@item.Codigo</td>



								<td>@item.ReganteId</td>
								<td>@item.Fecha.ToString("dd/MM/yyyy")</td>
								<td>@item.MetodoPago</td>
								<td class="@restrincion">@item.Estado</td>
								<td>@item.SubTotal.ToString("N2")</td>
								<td>@item.Recargos.ToString("N2")</td>
								<td>@item.Suplementaria.ToString("N2")</td>
								<td>@total.ToString("N2")</td>
							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="9" class="text-center">No se ha encontrado ventas</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
}
else if(acceso == "denegado")
{
	<style>

		.container {
			text-align: center;
			max-width: 600px;
			padding: 10px;
			background-color: #fff;
			border-radius: 10px;
			box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
			margin-top: 18%;
		}

			.container h1 {
				font-size: 2.5rem;
				color: #333;
				margin-bottom: 20px;
			}

			.container p {
				font-size: 1.2rem;
				color: #666;
				margin-bottom: 30px;
			}

			.container i {
				font-size: 4rem;
				color: #f44336;
			}
	</style>


	<div class="container">
		<i class="fas fa-exclamation-triangle"></i>
		<h1>ACCESO RESTRINGIDO</h1>
		<p>Disculpa las molestias, usted no tiene acceso a este apartado, no consta de suficientes permisos.</p>
		<p>¡Regrese mas tarde!</p>
	</div>
}




<div id="reporte" class="modal-body d-none" style="height: 35rem; overflow-y: auto;">

	<div class="row d-flex align-items-center justify-content-center" style="margin-top: 50px;">
		<div id="logoEmpresa" class="text-center">
			<img style="width: 150px; height: 120px; border-radius: 10%;" src="@obtenerLogotipo()" />
		</div>
		<h5 class="fw-bold fs-6 text-center">@empresa.Nombre</h5>

		<div class="row" style="justify-content: center;">
			<div id="telefonoEmpresa" class="col text-start">
				<label class="fw-bold"> <i class="fas fa-phone"></i> Telf.: <span class="fw-normal">@empresa.Telefono</span></label>
			</div>
			<div id="rnc" class="col text-end">
				<label class="fw-bold"> <i class="fas fa-building"></i> RNC: <span class="fw-normal">@empresa.RNC</span></label>
			</div>
		</div>

		<div id="direccionEmpresa" class="fw-bold text-center">
			<label> <i class="fas fa-map-marker"></i> Dirc.: <span class="fw-normal"> @empresa.Direccion</span></label>
		</div>

		<div class="row" style="text-align: end; margin-right: 15px;">
			<div class="text-end">
				<label class="fw-bold">Fecha de emisión: <span class="fw-normal">@DateTime.Now.ToString("dd/MM/yyyy")</span></label>
			</div>
			<div class="text-end">
				<label class="fw-bold">Hora de emisión: <span class="fw-normal">@DateTime.Now.ToString("HH:mm:ss")</span></label>
			</div>
		</div>

		<div class="row" style="justify-content: center; margin-top: 30px; margin-bottom: 20px;">
			<div class="col text-center">
				<h5 class="fw-bold">REPORTE DE PAGOS FORMALIZADOS</h5>
			</div>
		</div>
	</div>

	<div class="card-body">

		<table class="table table-bordered text-center">
			<thead class="bg-primary text-white">
				<tr>
					<th>C&oacutedigo</th>
					<th>Regante</th>
					<th>Fecha</th>
					<th>M&eacutetodo de Pago</th>
					<th>SubTotal</th>
					<th>Recargos</th>
					<th>Suplementaria</th>
					<th>Total</th>
				</tr>
			</thead>
			<tbody>
				@if (ListaPagos.Any())
				{
					@foreach (var item in ListaPagos)
					{
						if(item.Estado == "Disponible")
						{
							string reganteMostrar = "";

							var itemRegante = (ListaRegantes.FirstOrDefault(a => a.ReganteId == item.ReganteId))!;
							if(itemRegante != null)
							{
								reganteMostrar = itemRegante.Nombre + " " + itemRegante.Apellido;
							}
							else
							{
								reganteMostrar = "Regante " +  item.ReganteId.ToString() + " Eliminado.";
							}

							float total = @item.Recargos + @item.SubTotal - item.Suplementaria;
							<tr>
								<td>@item.Codigo</td>
								<td>@reganteMostrar</td>
								<td>@item.Fecha.ToString("dd/MM/yyyy")</td>
								<td>@item.MetodoPago</td>
								<td>@item.SubTotal.ToString("N2")</td>
								<td>@item.Recargos.ToString("N2")</td>
								<td>@item.Suplementaria.ToString("N2")</td>
								<td>@total.ToString("N2")</td>
							</tr>

							sumatoriaReporte += total;
						}
					}
				}
				else
				{
					<tr>
						<td colspan="9" class="text-center">No se ha encontrado pagos</td>
					</tr>
				}
			</tbody>
		</table>

		<div class="row mb-5 derecha">
			<div class="datoInferior">
				<div class="text-end" style="margin-right: 30px;">
					<label class="fw-bold">TOTAL PAGADO:</label>
					<span>RD$ @sumatoriaReporte.ToString("N2")</span>
				</div>
			</div>
		</div>

		<div class="row text-center centrado datoInferior" style="margin-top: 40px; margin-left: 30px; margin-right: 30px;">
			<label style="font-weight: normal;" class="fw-bold"><label style="font-weight: normal;" class="fw-bold">ESTE REPORTE PRESENTA INFORMACIÓN CRUCIAL SOBRE LOS REGANTES QUE FINALIZARON EL PAGO A LA EMPRESA CON EXISTO EN EL PERIODO ESPECIFICADO, CABE DESTACAR QUE EL INFORME PIERDE VALIDES AL MOMENTO DE SER EMITIDO YA QUE LOS DATOS FILTRADOS PUEDEN VARIAR EN CUALQUIER MOMENTO.</label>.</label>
		</div>
	</div>

</div>




@code {

	public string acceso = "";

	protected override async void OnAfterRender(bool firstRender)
	{
		if (firstRender)
		{
			var buscado = await AutentificacionService.usuarioActual(JSRuntime, UsuariosService);
			if (buscado != null)
			{
				if (buscado.Rol == "Gerente" || buscado.Rol == "Administrador")
				{
					acceso = "permitido";
				}
				else
				{
					acceso = "denegado";
				}
				StateHasChanged();
			}
			else
			{
				await AutentificacionService.CerrarSesion(JSRuntime);
			}
		}
	}


	private float pagoTotalFactura = 0;
	private int periodosPagados = 0;
	private float sumatoriaReporte = 0;

	public Empresa empresa = new Empresa();
	public Pagos pago = new Pagos();
	public Regantes regante = new Regantes();
	public Parametros parametro = new Parametros();
	public List<Pagos> ListaPagos = new List<Pagos>();
	public List<DetallePagos> ListaDetallesPago = new List<DetallePagos>();
	public List<Regantes> ListaRegantes = new List<Regantes>();

	protected override async Task OnInitializedAsync()
	{
		ListaPagos = await PagosService.Listar(p => true);
		parametro = await ParametrosService.Buscar(1);
		ListaRegantes = await RegantesService.Listar(r => true);

		var busqueda = await EmpresaService.Buscar(1);
		if (busqueda != null)
		{
			empresa = busqueda;
		}
		else
		{
			empresa.Nombre = "EMPRESA POR DEFECTO";
			empresa.Telefono = "(000)-000-0000";
			empresa.RNC = "345-E-J-PLO";
			empresa.Direccion = "ejemplo@gmail.com";
		}

	}


	public string obtenerLogotipo()
	{
		if (empresa.Imagen != null && empresa.Imagen.Length > 0)
		{
			string base64String = Convert.ToBase64String(empresa.Imagen);
			return $"data:image/png;base64,{base64String}";
		}
		else
		{
			return "imagen/sinLogo.jpg";
		}
	}

	public async Task ImprimirReporte()
	{		
		await JSRuntime.InvokeVoidAsync("printReportes", empresa.Impresora);
		sumatoriaReporte = 0;
	}


}
