@page "/reportesSalidaCaja"

@inject EmpresaService EmpresaService
@inject SalidaCajaService SalidaCajaService


@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject UsuariosService UsuariosService
@inject AutentificacionService AutentificacionService

<PageTitle>Reporte Salida de Caja</PageTitle>

@if (acceso == "permitido")
{
	<div class="card" style="border-radius: 20px;">

		<div class="card-header bg-primary" style="border-radius: 20px 20px 0px 0px;">
			<div class="row text-white text-center">
				<h3>Reporte Salida de Caja</h3>
			</div>
		</div>

		<div class="card-body">

			<div class="row mb-4">
				<div class="text-end">
					<button class="btn btn-success" @onclick="ImprimirReporte"><img style="width: 28px; height: 28px; background: none; border: none;" src="/iconos/ico_impresosra.png" /> Imprimir Reporte</button>
				</div>
			</div>


			<table class="table table-bordered text-center">
				<thead class="bg-primary text-white">
					<tr>
						<th>Asunto</th>
						<th>Monto</th>
						<th>Fecha</th>
						<th>Nota</th>
					</tr>
				</thead>
				<tbody>
					@if (ListaSalidaCaja.Any())
					{
						@foreach (var item in ListaSalidaCaja)
						{
							<tr>
								<td>@item.Asunto</td>
								<td>@item.Monto</td>
								<td>@item.Fecha.ToString("dd/MM/yyyy")</td>
								<td>@item.Monto.ToString("N2")</td>
							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="8" class="text-center">No se ha encontrado gastos</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

}
else if(acceso == "denegado")
{
	<style>

		.container {
			text-align: center;
			max-width: 600px;
			padding: 10px;
			background-color: #fff;
			border-radius: 10px;
			box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
			margin-top: 18%;
		}

			.container h1 {
				font-size: 2.5rem;
				color: #333;
				margin-bottom: 20px;
			}

			.container p {
				font-size: 1.2rem;
				color: #666;
				margin-bottom: 30px;
			}

			.container i {
				font-size: 4rem;
				color: #f44336;
			}
	</style>


	<div class="container">
		<i class="fas fa-exclamation-triangle"></i>
		<h1>ACCESO RESTRINGIDO</h1>
		<p>Disculpa las molestias, usted no tiene acceso a este apartado, no consta de suficientes permisos.</p>
		<p>¡Regrese mas tarde!</p>
	</div>
}






<div id="reporte" class="modal-body d-none" style="height: 35rem; overflow-y: auto;">

	<div class="row d-flex align-items-center justify-content-center" style="margin-top: 50px;">
		<div id="logoEmpresa" class="text-center">
			<img style="width: 150px; height: 120px; border-radius: 10%;" src="@obtenerLogotipo()" />
		</div>
		<h5 class="fw-bold fs-6 text-center">@empresa.Nombre</h5>

		<div class="row" style="justify-content: center;">
			<div id="telefonoEmpresa" class="col text-start">
				<label class="fw-bold"> <i class="fas fa-phone"></i> Telf.: <span class="fw-normal">@empresa.Telefono</span></label>
			</div>
			<div id="rnc" class="col text-end">
				<label class="fw-bold"> <i class="fas fa-building"></i> RNC: <span class="fw-normal">@empresa.RNC</span></label>
			</div>
		</div>

		<div id="direccionEmpresa" class="fw-bold text-center">
			<label> <i class="fas fa-map-marker"></i> Dirc.: <span class="fw-normal"> @empresa.Direccion</span></label>
		</div>

		<div class="row" style="text-align: end; margin-right: 15px;">
			<div class="text-end">
				<label class="fw-bold">Fecha de emisión: <span class="fw-normal">@DateTime.Now.ToString("dd/MM/yyyy")</span></label>
			</div>
			<div class="text-end">
				<label class="fw-bold">Hora de emisión: <span class="fw-normal">@DateTime.Now.ToString("HH:mm:ss")</span></label>
			</div>
		</div>

		<div class="row" style="justify-content: center; margin-top: 30px; margin-bottom: 20px;">
			<div class="col text-center">
				<h5 class="fw-bold">REPORTE DE SALIDA DE CAJA</h5>
			</div>
		</div>
	</div>

	<div class="card-body">

		<table class="table table-bordered text-center">
			<thead class="bg-primary text-white">
				<tr>
					<th>Asunto</th>					
					<th>Fecha</th>
					<th>Nota</th>
					<th>Monto</th>
				</tr>
			</thead>
			<tbody>
				@if (ListaSalidaCaja.Any())
				{
					@foreach (var item in ListaSalidaCaja)
					{
						<tr>
							<td>@item.Asunto</td>						
							<td>@item.Fecha.ToString("dd/MM/yyyy")</td>
							<td>@item.Nota</td>
							<td>@item.Monto.ToString("N2")</td>
						</tr>

						sumatoriaReporte += item.Monto;
					}
				}
				else
				{
					<tr>
						<td colspan="8" class="text-center">No se ha encontrado gastos</td>
					</tr>
				}
			</tbody>
		</table>


		<div class="row mb-5 derecha">
			<div class="datoInferior">
				<div class="text-end" style="margin-right: 30px;">
					<label class="fw-bold">TOTAL:</label>
					<span>RD$ @sumatoriaReporte.ToString("N2")</span>
				</div>
			</div>
		</div>

		<div class="row text-center centrado datoInferior" style="margin-top: 40px; margin-left: 30px; margin-right: 30px;">
			<label style="font-weight: normal;" class="fw-bold"><label style="font-weight: normal;" class="fw-bold">ESTE REPORTE PRESENTA INFORMACIÓN CRUCIAL SOBRE LA CANTIDAD DE DINERO O GASTOS A LOS CUALES SE LE HA DADO SALIDA DE LA EMPRESA, CABE DESTACAR QUE EL INFORME PIERDE VALIDES AL MOMENTO DE SER EMITIDO YA QUE LOS DATOS FILTRADOS PUEDEN VARIAR EN CUALQUIER MOMENTO.</label>.</label>
		</div>
	</div>

</div>









@code {

	public string acceso = "";

	protected override async void OnAfterRender(bool firstRender)
	{
		if (firstRender)
		{
			var buscado = await AutentificacionService.usuarioActual(JSRuntime, UsuariosService);
			if (buscado != null)
			{
				if (buscado.Rol == "Gerente" || buscado.Rol == "Administrador")
				{
					acceso = "permitido";
				}
				else
				{
					acceso = "denegado";
				}
				StateHasChanged();
			}
			else
			{
				await AutentificacionService.CerrarSesion(JSRuntime);
			}
		}
	}

	private string filtro = "1", busqueda = "";
	private float sumatoriaReporte = 0;

	public Empresa empresa = new Empresa();
	public List<SalidaCaja> ListaSalidaCaja = new List<SalidaCaja>();

	protected override async Task OnInitializedAsync()
	{
		ListaSalidaCaja = await SalidaCajaService.Listar(c => true);

		var busqueda = await EmpresaService.Buscar(1);
		if (busqueda != null)
		{
			empresa = busqueda;
		}
		else
		{
			empresa.Nombre = "EMPRESA POR DEFECTO";
			empresa.Telefono = "(000)-000-0000";
			empresa.RNC = "345-E-J-PLO";
			empresa.Direccion = "ejemplo@gmail.com";
		}
	}


	public async Task ImprimirReporte()
	{
		await JSRuntime.InvokeVoidAsync("printReportes");
		sumatoriaReporte = 0;
	}


	public string obtenerLogotipo()
	{
		if (empresa.Imagen != null && empresa.Imagen.Length > 0)
		{
			string base64String = Convert.ToBase64String(empresa.Imagen);
			return $"data:image/png;base64,{base64String}";
		}
		else
		{
			return "imagen/sinLogo.jpg";
		}
	}

}

